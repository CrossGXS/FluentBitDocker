version: '3.7'

services:
  #Base de datos MySQL
  db:
    container_name: mysql_c
    image: ${MYSQL_IMAGE}
    volumes:
    - type: volume
      source: drupaldatabase
      target: /var/lib/mysql
    environment:
      #Variables de entorno para las credenciales de mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - milocal
    #Conectar el servicio a fluent-bit para recolectar logs
    logging:
      driver: fluentd
      options:
        fluentd-async-connect: "true"
        fluentd-address: localhost:24224
        tag: bd.logs

  #Servidor web Nginx
  nginx:
    container_name: nginx_c
    image: ${NGINX_IMAGE}
    volumes:
    - type: volume
      source: staticfiles
      target: /var/www/html
    environment:
      NGINX_BACKEND_PORT: 9000
      NGINX_SERVER_NAME: localhost
      NGINX_BACKEND_HOST: php
      PROJECT_NAME: ${PROJECT_NAME}
    networks:
      - milocal
    ports:
     - 80:80
     - 443:443
    depends_on:
      - "php"
      - "fluentd"
    #Conectar el servicio a fluent-bit para recolectar logs
    logging:
      driver: fluentd
      options:
        fluentd-async-connect: "true"
        fluentd-address: localhost:24224
        tag: nginx.logs
 
  #Servicio php drupal + php-fpm
  php:
    container_name: drupal_c
    image: ${DRUPAL_IMAGE}
    volumes:
    - type: volume
      source: staticfiles
      target: /opt/drupal/web
    environment:
    #Variables de entorno para conectar drupal con la base de datos mysql
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: mysql_c
      MYSQL_PORT: 3306
      PROJECT_NAME: ${PROJECT_NAME}
      PROJECT_BASE_DOMAIN: ${PROJECT_BASE_DOMAIN}
    networks:
      - milocal
    depends_on:
      - "db"
    #Conectar el servicio a fluent-bit para recolectar logs
    logging:
      driver: fluentd
      options:
        fluentd-async-connect: "true"
        fluentd-address: localhost:24224
        tag: drupal.logs

  #Plugin de grafana que recoge los logs de fluent-bit y permite visualizarlos en Grafana
  loki:
    image: grafana/loki:2.0.0
    container_name: loki
    volumes:
      - ./config/loki.yaml:/etc/config/loki.yaml
    ports:
      - "3100:3100"
    networks:
      - milocal
  
  #Fluent-bit, recolector y reenviador de registros.  
  fluentd:
    container_name: fluentd
    # Imagen específica de fluent-bit para Loki+Grafana
    image: grafana/fluent-bit-plugin-loki
    ports:
      - 24224:24224
      - 24224:24224/udp
      - 2020:2020
    environment:
      #Url necesaria para conectar con Loki
      LOKI_URL: http://loki:3100/loki/api/v1/push
    volumes:
      # Fichero de configuración principal de fluent-bit
      - ./fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      # Fichero de configuración para parsers
      - ./fluent-bit/parsers.conf:/fluent-bit/etc/parsers.conf
      # Directorio para ficheros proporcionados por calyptia cloud
      - ./fluent-bit/calyptia:/tmp/storage
    networks:
      - milocal
  
  #Herramienta de monitoreo. Visualización de Logs
  grafana:
    image: grafana/grafana:7.2.2
    container_name: grafana
    environment:
      #Credenciales para entrar en Grafana
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3000:3000"
    networks:
      - milocal
    depends_on:
      - loki
    volumes:
      # Fichero para proporcionar el datasource (conexión a Loki)
      - ./grafana/configs/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml

#Volúmenes para ficheros estáticos (Drupal y MySQL) 
volumes:
  staticfiles:
    driver: local
    driver_opts:
      type: none
      device: ./storage/files
      o: bind
  drupaldatabase:
    driver: local
    driver_opts:
      type: none
      device: ./storage/mysql
      o: bind
#Red local
networks:
  milocal:
    driver: bridge

